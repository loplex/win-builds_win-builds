#!/bin/bash -eux

CWD="$(cd "$(dirname "${0}")" && pwd)"

description_of_slack_desc() {
  sed -n "s/^[-[:alnum:]]\+: //p" slack-desc \
    | sed -e 's;/;\\/;g' \
    | sed -e 's;";\\\\";g' \
    | tr '\n' ' '
}

source $1

if [ ! -e ${YYPREFIX} ]; then
  yypkg -init
fi

mkdir -p ${YYOUTPUT} ${CWD}/logs ${CWD}/processing

# iter: wrap the creation and installation of exactly one package from a slackbuild
# It first runs the slackbuild, redirecting its output (stdout+stderr) to log, but
# only its stderr is printed on screen.
# It then installs the package
# $1: package to build
iter() {
  echo Running $1
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_pre
  (
    export PREFIX="$(echo "${YYPREFIX}" | sed -e 's;^/;;')"
    export DESCR="$(description_of_slack_desc)"
    if [ -e config ]; then source config; fi
    set -o pipefail
    time ( /bin/bash -x ${PWD}/$1.SlackBuild 3>&1 1>&2 2>&3 ) | tee /dev/tty
    set +o pipefail
  ) > ${CWD}/logs/$1 2>&1
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_post
  comm -13 ${YYOUTPUT}/files_{pre,post} | awk '{ print $2; }' | xargs -n 1 -x yypkg -upgrade -install-new
}

inotifywait -m --format '%w/%f' -e close_write "${PWD}" \
  | while read FILE; do
      PKG="$(basename "${FILE}" | sed -e 's/\.tar$//')"
      echo "Building ${PKG}."
      (cd processing \
        && rm -rf ${PKG}* \
        && tar xf ${FILE} \
        && iter "${PKG}")
    done
