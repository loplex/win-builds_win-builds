#!/bin/bash -eux

CWD="$(cd "$(dirname "${0}")" && pwd)"
CONFIG="${1}"

description_of_slack_desc() {
  sed -n "s/^[-[:alnum:]]\+: //p" slack-desc \
    | sed -e 's;/;\\/;g' \
    | sed -e 's;";\\\\";g' \
    | tr '\n' ' '
}

if [ -z "$*" ]; then
  echo "No build-daemon configuration given, exiting"
  exit 1
fi

source build_daemon_config

if [ ! -e ${YYPREFIX} ]; then
  yypkg -init
fi

mkdir -p ${YYOUTPUT} ${CWD}/logs ${CWD}/processing

# iter: wrap the creation and installation of exactly one package from a
# slackbuild
# It first runs the slackbuild, redirecting its output (stdout+stderr) to log,
# but only its stderr is printed on screen and then installs the package.
# $1: package to build
iter() {
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_pre
  (
    export PREFIX="$(echo "${YYPREFIX}" | sed -e 's;^/;;')"
    export DESCR="$(description_of_slack_desc)"
    if [ -e config ]; then source config; fi
    set -o pipefail
    time ( /bin/bash -x ${PWD}/$1.SlackBuild 3>&1 1>&2 2>&3 ) | tee /dev/tty
    set +o pipefail
  ) > ${CWD}/logs/$1 2>&1
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_post
  comm -13 ${YYOUTPUT}/files_{pre,post} | awk '{ print $2; }' | xargs -n 1 -x yypkg -upgrade -install-new
  rm ${YYOUTPUT}/files_{pre,post}
}

inotifywait -m --format '%w/%f' -e close_write "${PWD}" \
  | while read FILE; do
      if [ "$(basename "${FILE}")" = "exit-build-daemon" ]; then 
        (sleep 0.5 && touch "${PWD}/exit-build-daemon")& break
      fi
      if ! echo "${FILE}" | grep -q '\.tar$'; then continue; fi
      PKG="$(basename "${FILE}" | sed -e 's/\.tar$//')"
      echo -e "\n ### Building ${PKG}. ###\n"
      (cd processing \
        && rm -rf ${PKG}* config* \
        && tar xf ${FILE} \
        && iter "${PKG}") || \
        ((sleep 0.5 && touch "${PWD}/exit-build-daemon")& exit 1)
    done

