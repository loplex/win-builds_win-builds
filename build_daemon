#!/bin/bash -eu

CWD="$(cd "$(dirname "${0}")" && pwd)"
cd "$(dirname "${0}")"

# ${CONFIG} is used in build_daemon_config which is sourced by this script
CONFIG="${1}"
shift
FILES="${*}"

description_of_slack_desc() {
  sed -n "s/^[-[:alnum:]]\+: //p" slack-desc \
    | sed -e 's;/;\\/;g' \
    | sed -e 's;";\\\\";g' \
    | tr '\n' ' '
}

if [ -z "$*" ]; then
  echo "No build-daemon configuration given, exiting"
  exit 1
fi

. ./build_daemon_config

echo "Build daemon configured for ${HOST_TRIPLET} => ${TARGET_TRIPLET}."

if [ ! -e ${YYPREFIX} ]; then
  yypkg -init
fi

mkdir -p ${YYOUTPUT} ${LOGS} ${CWD}/processing

# iter: wrap the creation and installation of exactly one package from a
# slackbuild
# It first runs the slackbuild, redirecting its output (stdout+stderr) to log,
# but only its stderr is printed on screen and then installs the package.
# $1: package to build
iter() {
  local PKG="${1}"
  # Remove the previous packages before building.
  # This prevents them from staying when the version or build number changes.
  find "${YYOUTPUT}" \( -name "${PKG}-[0-9]*" -o -name "${PKG}-v[0-9]*" \) \
    -exec rm {} + || true
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_pre
  (
    export PREFIX="$(echo "${YYPREFIX}" | sed -e 's;^/;;')"
    export DESCR="$(description_of_slack_desc)"
    if [ -e config ]; then source config; fi
    set -o pipefail
    time ( /bin/bash -x ${PWD}/${PKG}.SlackBuild 3>&1 1>&2 2>&3 ) | tee /dev/tty
    set +o pipefail
  ) > ${LOGS}/${PKG} 2>&1
  find ${YYOUTPUT} -maxdepth 1 -name '*.txz' | xargs sha1sum | sort \
    > ${YYOUTPUT}/files_post
  comm -13 ${YYOUTPUT}/files_{pre,post} | awk '{ print $2; }' | xargs -n 1 -x yypkg -upgrade -install-new
  rm ${YYOUTPUT}/files_{pre,post}
}

for FILE in ${*}; do
  PKG="$(basename "${FILE%%.tar}")"
  printf "\n ### Building ${PKG}. ###\n\n"
  (cd processing \
    && rm -rf "${PKG}" && mkdir -p "${PKG}" \
    && cd "${PKG}" \
    && tar xf "../../${FILE}" \
    && iter "${PKG}")
done

echo "Setting up ${YYOUTPUT}."
sherpa_gen "${YYOUTPUT}"
